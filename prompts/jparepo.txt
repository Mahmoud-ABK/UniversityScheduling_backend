
**Note**: all of these repositories extends JPArepository
**Note**: a jparepository have by default these functions basic crud functions :
```java
// Save operations
<S extends T> S save(S entity);
<S extends T> List<S> saveAll(Iterable<S> entities);
<S extends T> S saveAndFlush(S entity);
<S extends T> List<S> saveAllAndFlush(Iterable<S> entities);
void flush();

// Retrieve operations
Optional<T> findById(ID id);
List<T> findAll();
List<T> findAll(Sort sort);
List<T> findAllById(Iterable<ID> ids);
Page<T> findAll(Pageable pageable);
List<T> findAll(Sort sort);
Page<T> findAll(Pageable pageable);
T getById(ID id);
boolean existsById(ID id);
long count();

// Delete operations
void deleteById(ID id);
void delete(T entity);
void deleteAllById(Iterable<? extends ID> ids);
void deleteAll(Iterable<? extends T> entities);
void deleteAll();
void deleteInBatch(Iterable<T> entities);
void deleteAllInBatch();
void deleteAllByIdInBatch(Iterable<ID> ids);

// Example and query methods

<S extends T> long count(Example<S> example);
<S extends T> boolean exists(Example<S> example);

Here are JPA repositories :


package com.scheduling.universityschedule_backend.repository;

import com.scheduling.universityschedule_backend.model.Administrateur;
import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.stereotype.Repository;

@Repository
public interface AdministrateurRepository extends JpaRepository<Administrateur, Long> {
}
package com.scheduling.universityschedule_backend.repository;

import com.scheduling.universityschedule_backend.model.Branche;
import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.stereotype.Repository;

@Repository
public interface BrancheRepository extends JpaRepository<Branche, Long> {
}
package com.scheduling.universityschedule_backend.repository;

import com.scheduling.universityschedule_backend.model.Enseignant;
import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.stereotype.Repository;

@Repository
public interface EnseignantRepository extends JpaRepository<Enseignant, Long> {
}
package com.scheduling.universityschedule_backend.repository;

import com.scheduling.universityschedule_backend.model.Etudiant;
import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.stereotype.Repository;

@Repository
public interface EtudiantRepository extends JpaRepository<Etudiant, Long> {
}
package com.scheduling.universityschedule_backend.repository;

import com.scheduling.universityschedule_backend.model.FichierExcel;
import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.stereotype.Repository;

@Repository
public interface FichierExcelRepository extends JpaRepository<FichierExcel, Long> {
}
package com.scheduling.universityschedule_backend.repository;

import com.scheduling.universityschedule_backend.model.Notification;
import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.stereotype.Repository;

@Repository
public interface NotificationRepository extends JpaRepository<Notification, Long> {
}
package com.scheduling.universityschedule_backend.repository;

import com.scheduling.universityschedule_backend.model.Personne;
import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.stereotype.Repository;

@Repository
public interface PersonneRepository extends JpaRepository<Personne, Long> {
}
package com.scheduling.universityschedule_backend.repository;

import com.scheduling.universityschedule_backend.model.PropositionDeRattrapage;
import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.stereotype.Repository;

@Repository
public interface PropositionDeRattrapageRepository extends JpaRepository<PropositionDeRattrapage, Long> {
}
package com.scheduling.universityschedule_backend.repository;

import com.scheduling.universityschedule_backend.model.Salle;
import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.stereotype.Repository;

@Repository
public interface SalleRepository extends JpaRepository<Salle, Long> {
}
package com.scheduling.universityschedule_backend.repository;

import com.scheduling.universityschedule_backend.model.Seance;
import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.Query;
import org.springframework.data.repository.query.Param;
import org.springframework.stereotype.Repository;

import java.util.List;

@Repository
public interface SeanceRepository extends JpaRepository<Seance, Long> {
    @Query("""
        SELECT s1, s2
        FROM Seance s1
        JOIN Seance s2 ON s1.jour = s2.jour AND s1.id < s2.id
        WHERE s1.heureDebut < s2.heureFin AND s1.heureFin > s2.heureDebut
          AND (
                s1.salle.id = s2.salle.id
                OR s1.enseignant.id = s2.enseignant.id
                OR EXISTS (SELECT 1 FROM s1.branches b1 JOIN s2.branches b2 WHERE b1.id = b2.id)
                OR EXISTS (SELECT 1 FROM s1.tds td1 JOIN s2.tds td2 WHERE td1.id = td2.id)
                OR EXISTS (SELECT 1 FROM s1.tps tp1 JOIN s2.tps tp2 WHERE tp1.id = tp2.id)
              )
          AND (NOT (
                  (
                    (s1.frequence <> '' AND s1.frequence <> '1/15' AND s2.frequence = '1/15')
                    OR (s1.frequence = '1/15' AND s2.frequence <> '' AND s2.frequence <> '1/15')
                  )
                  AND s1.salle.id = s2.salle.id
                  AND (
                       EXISTS (SELECT 1 FROM s1.branches b1 JOIN s2.branches b2 WHERE b1.id = b2.id)
                       OR EXISTS (SELECT 1 FROM s1.tds td1 JOIN s2.tds td2 WHERE td1.id = td2.id)
                       OR EXISTS (SELECT 1 FROM s1.tps tp1 JOIN s2.tps tp2 WHERE tp1.id = tp2.id)
                  )
                 ))
        """)
    List<Object[]> findConflictingSeancePairs();
    @Query("""
            SELECT s1, s2
            FROM Seance s1
            JOIN Seance s2 ON s1.jour = s2.jour AND s1.id < s2.id
            WHERE 
                s1.salle.id = s2.salle.id
                AND s1.heureDebut < s2.heureFin
                AND s1.heureFin > s2.heureDebut
           """)
    List<Object[]> findConflictingByRooms();
    @Query("""
        SELECT s
        FROM Seance s
        WHERE 
            s.id <> :seanceId
            AND s.jour = :jour
            AND s.salle.id = :salleId
            AND s.heureDebut < :heureFin
            AND s.heureFin > :heureDebut
       """)
    List<Seance> findRoomConflictsForSeance(@Param("seanceId") Long seanceId,
                                            @Param("jour") String jour,
                                            @Param("salleId") Long salleId,
                                            @Param("heureDebut") String heureDebut,
                                            @Param("heureFin") String heureFin);

}
package com.scheduling.universityschedule_backend.repository;

import com.scheduling.universityschedule_backend.model.Signal;
import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.stereotype.Repository;

@Repository
public interface SignalRepository extends JpaRepository<Signal, Long> {
}
package com.scheduling.universityschedule_backend.repository;

import com.scheduling.universityschedule_backend.model.TD;
import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.stereotype.Repository;

@Repository
public interface TDRepository extends JpaRepository<TD, Long> {
}
package com.scheduling.universityschedule_backend.repository;

import com.scheduling.universityschedule_backend.model.Technicien;
import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.stereotype.Repository;

@Repository
public interface TechnicienRepository extends JpaRepository<Technicien, Long> {
}
package com.scheduling.universityschedule_backend.repository;

import com.scheduling.universityschedule_backend.model.TP;
import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.stereotype.Repository;

@Repository
public interface TPRepository extends JpaRepository<TP, Long> {
}
